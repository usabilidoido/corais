<?php

/**
 * @author Greg Harvey - http://www.drupaler.co.uk
 */

/**
 * Implementation of hook_perm().
 */
function nodequeue_service_perm() {
  return array('get nodequeues');
}

/**
 * Implementation of hook_service().
 */
function nodequeue_service_service() {
  return array(
    array(
      '#method'   => 'nodequeue.getQueues',
      '#callback' => 'nodequeue_service_get_nodequeues',
      '#access callback' => 'nodequeue_service_get_nodequeues_access',
      '#file' => array('file' => 'inc', 'module' => 'nodequeue_service'),
      '#return'   => 'struct',
      '#help'     => t('Returns a keyed array by qid of available nodequeues and their settings.')
    ),
    array(
      '#method'   => 'nodequeue.getSubQueues',
      '#callback' => 'nodequeue_service_get_subqueues',
      '#access callback' => 'nodequeue_service_get_nodequeues_access',
      '#file' => array('file' => 'inc', 'module' => 'nodequeue_service'),
      '#args'             => array(
        array(
          '#name'           => 'qid',
          '#type'           => 'int',
          '#description'    => t('A parent nodequeue queue ID.'),
        ),
      ),
      '#return'   => 'struct',
      '#help'     => t('Returns a keyed array by sqid of available subqueues and their settings.')
    ),
    array(
      '#method'   => 'subqueue.save',
      '#callback' => 'nodequeue_service_save_subqueue',
      '#access callback' => 'nodequeue_service_save_subqueue_access',
      '#file' => array('file' => 'inc', 'module' => 'nodequeue_service'),
      '#args'             => array(
        array(
          '#name'           => 'subqueue',
          '#type'           => 'struct',
          '#description'    => t('The subqueue to update.'),
        ),
      ),
      '#return'   => 'struct',
      '#help'     => t('Save the contents of the given subqueue.')
    ),
  );
}
