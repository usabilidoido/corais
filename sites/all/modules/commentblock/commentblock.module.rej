***************
*** 16,21 ****
   */
  
  /**
   * Implementation of hook_views_api().
   */
  function commentblock_views_api() {
--- 16,62 ----
   */
  
  /**
+  * Implementation of hook_menu().
+  */
+ function commentblock_menu() {
+   $items = array();
+   $items['admin/settings/commentblock'] = array(
+     'title' => t('Comment Block Settings'), 
+     'description' => t('Configure content types to which changes are applying.'), 
+     'page callback' => 'drupal_get_form', 
+     'page arguments' => array('_commentblock_settings_form'),
+     'access arguments' => array('administer content types'), 
+     'type' => MENU_NORMAL_ITEM,
+   );
+   return $items;
+ }
+ 
+ function _commentblock_settings_form() {
+   $settings = array();  
+   $settings['content_types'] = array(
+     '#type' => 'fieldset',
+     '#title' => t('Content Types'),
+     '#collapsible' => FALSE,
+     '#collapsed' => FALSE,
+     '#description' => t('Configure content types to which changes are applying.'),
+   );
+   $content_types = node_get_types($op = 'types');
+   $content_types_options = array();
+   foreach($content_types as $content_type) {
+     $content_types_options[$content_type->type] = $content_type->name;
+   }
+   $def_content_types_values = variable_get('commentblock_settings_content_types', NULL);
+   $settings['content_types']['commentblock_settings_content_types'] = array(
+     '#title' => t('Content Types'),
+     '#type' => 'checkboxes',
+     '#default_value' => (($def_content_types_values != NULL) ? $def_content_types_values : array()),
+     '#options' => $content_types_options,
+     '#description' => t('Alternative comments applying to only cheked content types. You have to specify blocks visibility to avoind double displaing of comments and comments form.'),
+   );
+   return system_settings_form($settings);
+ }
+ 
+ /**
   * Implementation of hook_views_api().
   */
  function commentblock_views_api() {
***************
*** 32,39 ****
   * comment listing from the node body.
   */
  function commentblock_nodeapi(&$node, $op) {
    if ($op == 'view') {
-     $node->comment = NULL;
    }
  }
  
--- 73,83 ----
   * comment listing from the node body.
   */
  function commentblock_nodeapi(&$node, $op) {
+   $content_types = variable_get('commentblock_settings_content_types', NULL);
    if ($op == 'view') {
+     if(!empty($content_types[$node->type]) && $content_types[$node->type] == $node->type) {
+       $node->comment = NULL;
+     }
    }
  }
  
***************
*** 75,84 ****
    // When you use a custom view for displaying comments, many options on the
    // node type settings page are irrelevant.
    if ($form_id == 'node_type_form') {
-     $form['comment']['comment_default_mode']['#access'] = FALSE;
-     $form['comment']['comment_default_order']['#access'] = FALSE;
-     $form['comment']['comment_default_per_page']['#access'] = FALSE;
-     $form['comment']['comment_controls']['#access'] = FALSE;
-     $form['comment']['comment_form_location']['#access'] = FALSE;
    }
  }
--- 119,131 ----
    // When you use a custom view for displaying comments, many options on the
    // node type settings page are irrelevant.
    if ($form_id == 'node_type_form') {
+     $content_types = variable_get('commentblock_settings_content_types', NULL);
+     if(!empty($content_types[$form['#node_type']->type]) && $content_types[$form['#node_type']->type] == $form['#node_type']->type) {
+       $form['comment']['comment_default_mode']['#access'] = FALSE;
+       $form['comment']['comment_default_order']['#access'] = FALSE;
+       $form['comment']['comment_default_per_page']['#access'] = FALSE;
+       $form['comment']['comment_controls']['#access'] = FALSE;
+       $form['comment']['comment_form_location']['#access'] = FALSE;
+     }
    }
  }
